<?xml version="1.0" encoding="utf-8"?>
<ipxact:component xmlns:ipxact="http://www.accellera.org/XMLSchema/IPXACT/1685-2014" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:snps="http://www.synopsys.com/SPIRIT-snps" xsi:schemaLocation="http://www.accellera.org/XMLSchema/IPXACT/1685-2014 http://www.accellera.org/XMLSchema/IPXACT/1685-2014/index.xsd">
  <ipxact:vendor>ThirdParty</ipxact:vendor>
  <ipxact:library>ThirdParty</ipxact:library>
  <ipxact:name>axi_crossbar_wr</ipxact:name>
  <ipxact:version>1.0</ipxact:version>
  <ipxact:model>
    <ipxact:views>
      <ipxact:view>
        <ipxact:name>RTL</ipxact:name>
        <ipxact:envIdentifier>:*Synthesis:</ipxact:envIdentifier>
        <ipxact:componentInstantiationRef>RTL</ipxact:componentInstantiationRef>
      </ipxact:view>
    </ipxact:views>
    <ipxact:instantiations>
      <ipxact:componentInstantiation>
        <ipxact:name>RTL</ipxact:name>
        <ipxact:description>No description available.</ipxact:description>
        <ipxact:language strict="true">systemverilog</ipxact:language>
        <ipxact:moduleName>axi_crossbar_wr</ipxact:moduleName>
        <ipxact:moduleParameters>
          <ipxact:moduleParameter dataType="int" parameterId="M_REGIONS" prompt="M_REGIONS" resolve="user" type="longint">
            <ipxact:name>M_REGIONS</ipxact:name>
            <ipxact:value>1</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="S_IF_COUNT" prompt="S_IF_COUNT" resolve="user" type="longint">
            <ipxact:name>S_IF_COUNT</ipxact:name>
            <ipxact:value>4</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="M_IF_COUNT" prompt="M_IF_COUNT" resolve="user" type="longint">
            <ipxact:name>M_IF_COUNT</ipxact:name>
            <ipxact:value>4</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="DATA_WIDTH" prompt="DATA_WIDTH" resolve="user" type="longint">
            <ipxact:name>DATA_WIDTH</ipxact:name>
            <ipxact:value>32</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="ADDR_WIDTH" prompt="ADDR_WIDTH" resolve="user" type="longint">
            <ipxact:name>ADDR_WIDTH</ipxact:name>
            <ipxact:value>32</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="STRB_WIDTH" prompt="STRB_WIDTH" resolve="user" type="longint">
            <ipxact:name>STRB_WIDTH</ipxact:name>
            <ipxact:value>(DATA_WIDTH/8)</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="S_IF_ID_WIDTH" prompt="S_IF_ID_WIDTH" resolve="user" type="longint">
            <ipxact:name>S_IF_ID_WIDTH</ipxact:name>
            <ipxact:value>8</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="M_IF_ID_WIDTH" prompt="M_IF_ID_WIDTH" resolve="user" type="longint">
            <ipxact:name>M_IF_ID_WIDTH</ipxact:name>
            <ipxact:value>(S_IF_ID_WIDTH + $clog2(S_IF_COUNT))</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([sHdl::binaryOp + @S_IF_ID_WIDTH @clog2(@S_IF_COUNT) 32])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="int" parameterId="M_BASE_ADDR" prompt="M_BASE_ADDR" resolve="user" type="longint">
            <ipxact:name>M_BASE_ADDR</ipxact:name>
            <ipxact:value>0</ipxact:value>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="M_ADDR_WIDTH" prompt="M_ADDR_WIDTH" resolve="user" type="bit">
            <ipxact:name>M_ADDR_WIDTH</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>127</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{M_IF_COUNT {{M_REGIONS {32'd24}}}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@M_IF_COUNT} {([::sHdl::concatenateBitStrings {{multi} {@M_REGIONS} {0b00000000000000000000000000011000} }])} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="M_CONNECT" prompt="M_CONNECT" resolve="user" type="bit">
            <ipxact:name>M_CONNECT</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>31</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{M_IF_COUNT {{S_IF_COUNT {1'b1}}}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@M_IF_COUNT} {([::sHdl::concatenateBitStrings {{multi} {@S_IF_COUNT} {0b1} }])} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="S_AW_FIFO" prompt="S_AW_FIFO" resolve="user" type="bit">
            <ipxact:name>S_AW_FIFO</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>7</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{S_IF_COUNT {2'b0}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@S_IF_COUNT} {0b00} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="S_W_FIFO" prompt="S_W_FIFO" resolve="user" type="bit">
            <ipxact:name>S_W_FIFO</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>7</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{S_IF_COUNT {2'b0}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@S_IF_COUNT} {0b00} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="S_B_FIFO" prompt="S_B_FIFO" resolve="user" type="bit">
            <ipxact:name>S_B_FIFO</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>7</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{S_IF_COUNT {2'b1}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@S_IF_COUNT} {0b01} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="M_AW_FIFO" prompt="M_AW_FIFO" resolve="user" type="bit">
            <ipxact:name>M_AW_FIFO</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>7</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{M_IF_COUNT {2'b1}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@M_IF_COUNT} {0b01} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="M_W_FIFO" prompt="M_W_FIFO" resolve="user" type="bit">
            <ipxact:name>M_W_FIFO</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>7</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{M_IF_COUNT {2'd2}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@M_IF_COUNT} {0b10} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
          <ipxact:moduleParameter dataType="bit" parameterId="M_B_FIFO" prompt="M_B_FIFO" resolve="user" type="bit">
            <ipxact:name>M_B_FIFO</ipxact:name>
            <ipxact:vectors>
              <ipxact:vector>
                <ipxact:left>7</ipxact:left>
                <ipxact:right>0</ipxact:right>
              </ipxact:vector>
            </ipxact:vectors>
            <ipxact:value>{M_IF_COUNT {2'b0}}</ipxact:value>
            <ipxact:vendorExtensions>
              <snps:parameter>
                <snps:attribute name="DefaultValue">=([::sHdl::concatenateBitStrings {{multi} {@M_IF_COUNT} {0b00} }])</snps:attribute>
              </snps:parameter>
            </ipxact:vendorExtensions>
          </ipxact:moduleParameter>
        </ipxact:moduleParameters>
        <ipxact:fileSetRef>
          <ipxact:localName>Hdl</ipxact:localName>
        </ipxact:fileSetRef>
      </ipxact:componentInstantiation>
    </ipxact:instantiations>
    <ipxact:ports>
      <ipxact:port>
        <ipxact:name>clk</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awready</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_bid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*M_IF_ID_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_bresp</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*2)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_bvalid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_wready</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>rst</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awaddr</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*ADDR_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awburst</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*2)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*S_IF_ID_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awlen</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*8)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awlock</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awqos</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*4)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awsize</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*3)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awvalid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_bready</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_wdata</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*DATA_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_wid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*S_IF_ID_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_wlast</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_wstrb</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*STRB_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_wvalid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>wr_error_ready</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>in</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awaddr</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*ADDR_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awburst</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*2)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*M_IF_ID_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awlen</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*8)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awlock</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awqos</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*4)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awsize</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*3)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_awvalid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_bready</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_wdata</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*DATA_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_wid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*M_IF_ID_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_wlast</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_wstrb</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((M_IF_COUNT*STRB_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>m_axi_wvalid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(M_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_awready</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_bid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*S_IF_ID_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_bresp</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*2)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_bvalid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>s_axi_wready</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>wr_error_addr</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>((S_IF_COUNT*ADDR_WIDTH)-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
      <ipxact:port>
        <ipxact:name>wr_error_valid</ipxact:name>
        <ipxact:wire>
          <ipxact:direction>out</ipxact:direction>
          <ipxact:vectors>
            <ipxact:vector>
              <ipxact:left>(S_IF_COUNT-1)</ipxact:left>
              <ipxact:right>0</ipxact:right>
            </ipxact:vector>
          </ipxact:vectors>
        </ipxact:wire>
      </ipxact:port>
    </ipxact:ports>
  </ipxact:model>
  <ipxact:fileSets>
    <ipxact:fileSet>
      <ipxact:name>Hdl</ipxact:name>
      <ipxact:file>
        <ipxact:name>/home/doee/Workspace/ip_integrator/verilog2json/axi_demo/axi_crossbar_wr.v</ipxact:name>
        <ipxact:fileType>systemVerilogSource</ipxact:fileType>
        <ipxact:logicalName>work</ipxact:logicalName>
      </ipxact:file>
    </ipxact:fileSet>
  </ipxact:fileSets>
</ipxact:component>

